# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-05-10 22:43
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import meta.models
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.wagtailcore.fields
import wagtail_modeltranslation.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0019_delete_filter'),
        ('wagtailcore', '0033_remove_golive_expiry_help_text'),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogListPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.wagtailcore.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Список записей в Блоге',
                'verbose_name': 'Список записей в Блоге',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('title_ru', models.CharField(help_text="The page title as you'd like it to be seen by the public", max_length=255, null=True, verbose_name='title')),
                ('title_en', models.CharField(help_text="The page title as you'd like it to be seen by the public", max_length=255, null=True, verbose_name='title')),
                ('date', models.DateField(verbose_name='Post date')),
                ('intro', models.CharField(max_length=250)),
                ('intro_ru', models.CharField(max_length=250, null=True)),
                ('intro_en', models.CharField(max_length=250, null=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(blank=True)),
                ('body_ru', wagtail.wagtailcore.fields.RichTextField(blank=True, null=True)),
                ('body_en', wagtail.wagtailcore.fields.RichTextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Записи в Блоге',
                'verbose_name': 'Запись в Блоге',
            },
            bases=(wagtail_modeltranslation.models.TranslationMixin, meta.models.ModelMeta, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='BlogPageGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='blog.BlogPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(wagtail_modeltranslation.models.TranslationMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BlogPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='blog.BlogPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_blogpagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogTagIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'verbose_name_plural': 'Список тегов',
                'verbose_name': 'Список тегов',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FaqListPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'verbose_name_plural': 'Список записей FAQ',
                'verbose_name': 'Список записей FAQ',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FaqPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('title_ru', models.CharField(help_text="The page title as you'd like it to be seen by the public", max_length=255, null=True, verbose_name='title')),
                ('title_en', models.CharField(help_text="The page title as you'd like it to be seen by the public", max_length=255, null=True, verbose_name='title')),
                ('date', models.DateField(verbose_name='Post date of FAQ')),
                ('body', wagtail.wagtailcore.fields.RichTextField(blank=True)),
                ('body_ru', wagtail.wagtailcore.fields.RichTextField(blank=True, null=True)),
                ('body_en', wagtail.wagtailcore.fields.RichTextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Записи в FAQ',
                'verbose_name': 'Запись в FAQ',
            },
            bases=(wagtail_modeltranslation.models.TranslationMixin, meta.models.ModelMeta, 'wagtailcore.page'),
        ),
        migrations.AddField(
            model_name='blogpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='blog.BlogPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
